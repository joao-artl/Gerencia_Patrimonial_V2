services:
  db:
    image: postgres:15
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "while ! nc -z db 5432; do sleep 1; done &&
             echo 'Banco de dados pronto!' &&
             python src/manage.py migrate &&
             python src/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        
  tests:
    build: .
    command: >
      sh -c "while ! nc -z web 8000; do sleep 1; done &&
             echo 'API está no ar! Rodando suíte de testes...' &&
             pytest tests/"
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_started
    environment:
      - API_HOST=web
      - PYTHONUNBUFFERED=1
      
  lint:
    build: .
    volumes:
      - ./src:/app
      - ./tests:/app/tests
    # Aumenta o limite de caracteres para acomodar linhas longas geradas automaticamente pelo Django
    command: flake8 . --max-line-length=95 

volumes:
  postgres_data: