services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "while ! nc -z db 5432; do sleep 1; done &&
             echo 'Banco de dados pronto!' &&
             python src/manage.py migrate &&
             python src/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy

  tests:
    build: .
    command: >
      sh -c "while ! nc -z web 8000; do sleep 1; done &&
             echo 'API está no ar! Rodando suíte de testes...' &&
             pytest tests/"
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_started
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - API_HOST=web
      - PYTHONUNBUFFERED=1


  lint:
    build: .
    volumes:
      - ./src:/app
      - ./tests:/app/tests
    command: flake8 . --max-line-length=95

volumes:
  postgres_data: